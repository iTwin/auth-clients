parameters:
  - name: shouldPublish
    displayName: Publish packages
    type: boolean
    default: false

trigger:
- main

pr:
  drafts: false
  branches:
    include:
      - main

resources:
  repositories:
    - repository: build-pipeline-scripts
      type: git
      ref: master
      name: iModelTechnologies/imodeljs-build-pipeline-scripts

stages:
- stage: Build
  displayName: Build
  jobs:
    - job: BuildPackages
      strategy:
        matrix:
          linux:
            imageName: 'ubuntu-latest'
          mac:
            imageName: 'macos-latest'
          windows:
            imageName: 'windows-latest'
      pool:
        vmImage: $(imageName)
      steps:
      - script: |
          git config --local user.email imodeljs-admin@users.noreply.github.com
          git config --local user.name imodeljs-admin
        displayName: git config

      - script: node common/scripts/install-run-rush.js install
        displayName: Rush Install

      - script: node common/scripts/install-run-rush.js change -v

      - script: node common/scripts/install-run-rush.js build -v -p max
        displayName: Rush Build

      - script: node common/scripts/install-run-rush.js lint
        displayName: Rush Lint

      # By default linux agents do not have a real display so use the virtual framebuffer
      - script: xvfb-run --auto-servernum --server-args='-screen 0, 1600x900x24' node common/scripts/install-run-rush.js cover --verbose
        displayName: Rush Cover - Linux
        condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

      # MacOS and Windows agents work without any virtual display
      - script: node common/scripts/install-run-rush.js cover --verbose
        displayName: Rush Cover - Windows/Mac
        condition: and(succeeded(), ne(variables['Agent.OS'], 'Linux'))

      - template: templates/publish-test-results.yaml

      # Publish packages
      - template: templates/publish-packages.yaml
        parameters:
          shouldPublish: ${{ parameters.shouldPublish }}
