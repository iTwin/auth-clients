parameters:
  - name: shouldPublish
    displayName: Publish packages
    type: boolean
    default: false

resources:
  repositories:
    - repository: build-pipeline-scripts
      type: git
      ref: master
      name: iModelTechnologies/imodeljs-build-pipeline-scripts
    - repository: itwinjs-core
      type: github
      endpoint: iModelJs
      name: iTwin/itwinjs-core
      ref: refs/heads/master

trigger: none
pr: none

stages:
- stage: Build
  displayName: Build
  jobs:
    - job: BuildPackages
      strategy:
        matrix:
          linux:
            imageName: 'ubuntu-latest'
          mac:
            imageName: 'macos-latest'
          windows:
            imageName: 'windows-latest'
      pool:
        vmImage: $(imageName)
      steps:
      - checkout: self
        persistCredentials: true

      - task: NodeTool@0
        displayName: Use Node 18
        inputs:
          versionSpec: 18.12.0

      - script: npm install -g pnpm@7.27.0
        displayName: Install pnpm

      - script: |
          git config user.email imodeljs-admin@users.noreply.github.com
          git config user.name imodeljs-admin
        displayName: git config

      - name: Install packages
        run: pnpm install

      - script: pnpm check
        displayName: Beachball check

      - script: pnpm install
        displayName: Install packages

      - script: pnpm build
        displayName: Build packages

      # Necessary for running linux tests in a dbus session
      #   See packages/electron/README.md for more details
      - script: |
          sudo apt-get install -y libsecret-1-dev
          sudo apt-get install -y dbus-x11
          sudo apt-get install -y gnome-keyring
        displayName: Install Packages - Linux
        condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

      # By default linux agents do not have a real display so use the virtual framebuffer
      # Tests are run in a dbus session after creating a keyring password for compatibility with Keytar
      #   See packages/electron/README.md for more details
      - script: >-
          dbus-run-session -- sh -c
          "echo 'keyringPassword' | gnome-keyring-daemon -r -d --unlock ;
           xvfb-run --auto-servernum --server-args='-screen 0, 1600x900x24' pnpm cover --verbose"
        displayName: pnpm cover - Linux
        condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

      # MacOS and Windows agents work without any virtual display
      - script: pnpm cover --verbose
        displayName: pnpm cover - Windows/Mac
        condition: and(succeeded(), ne(variables['Agent.OS'], 'Linux'))

      - template: templates/publish-test-results.yaml

      # Publish packages
      - script: pnpm run publish-packages --publish --push --message "applying package updates [skip ci]" -b main
        displayName: Publish packages
        condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), startsWith(variables['Build.SourceBranch'], 'refs/heads/main'), ${{ parameters.shouldPublish }} )
        env:
          NPM_AUTH_TOKEN: $(npmToken)

      # Build and publish documentation as pipeline artifacts
      # This relies on variables set from within the publish template above,
      # one for each package published.
      - template: templates/build-docs.yaml
        parameters:
          shouldPublish: ${{ parameters.shouldPublish }}
