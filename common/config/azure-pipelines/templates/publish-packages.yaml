parameters:
  - name: shouldPublish # name of the parameter; required
    type: boolean # data type of the parameter; required

steps:
  - bash: |
      # write pre-bump version info to file
      node common/scripts/install-run-rush.js list --json > ${{System.DefaultWorkingDirectory}}/versions-before.txt

      # bump versions... rush will fail... ignore it
      node common/scripts/install-run-rush.js version --bump

      # write post-bump version info to file
      node common/scripts/install-run-rush.js list --json > ${{System.DefaultWorkingDirectory}}/versions-after.txt

      # Next version dance
      node common/scripts/handleNextVersion.js ${{System.DefaultWorkingDirectory}}/versions-before.txt ${{System.DefaultWorkingDirectory}}/versions-after.txt
    displayName: Add Release Notes
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['Build.SourceBranch'], 'refs/heads/main'), ${{ parameters.shouldPublish }} )

  # While testing dry-run
  # - script: node common/scripts/install-run-rush.js publish --publish -a -b main --set-access-level public
  #   displayName: rush publish package
  #   condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['Build.SourceBranch'], 'refs/heads/main'), ${{ parameters.shouldPublish }} )
  #   env:
  #     NPM_AUTH_TOKEN: $(npmToken)

  - script: node common/scripts/install-run-rush.js publish
    displayName: rush publish package
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['Build.SourceBranch'], 'refs/heads/main'), ${{ parameters.shouldPublish }} )
    env:
      NPM_AUTH_TOKEN: $(npmToken)
